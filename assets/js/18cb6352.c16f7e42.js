"use strict";(self.webpackChunktus_1688_github_io=self.webpackChunktus_1688_github_io||[]).push([[5027],{8453:(e,t,o)=>{o.d(t,{R:()=>l,x:()=>a});var n=o(6540);const i={},s=n.createContext(i);function l(e){const t=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),n.createElement(s.Provider,{value:t},e.children)}},9805:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>r,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"Web Development Notes/Dockerize SvelteKit","title":"Dockerize SvelteKit","description":"How to automate the deployment of a SvelteKit with Docker","source":"@site/docs/Web Development Notes/Dockerize SvelteKit.md","sourceDirName":"Web Development Notes","slug":"/Web Development Notes/Dockerize SvelteKit","permalink":"/docs/Web Development Notes/Dockerize SvelteKit","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"svelte","permalink":"/docs/tags/svelte"},{"inline":true,"label":"web development","permalink":"/docs/tags/web-development"},{"inline":true,"label":"docker","permalink":"/docs/tags/docker"}],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"description":"How to automate the deployment of a SvelteKit with Docker","tags":["svelte","web development","docker"]},"sidebar":"tutorialSidebar","previous":{"title":"Dockerize Go REST API","permalink":"/docs/Web Development Notes/Dockerize Go REST API"}}');var i=o(4848),s=o(8453);const l={sidebar_position:4,description:"How to automate the deployment of a SvelteKit with Docker",tags:["svelte","web development","docker"]},a=void 0,r={},d=[{value:"Why we use Docker on SvelteKit?",id:"why-we-use-docker-on-sveltekit",level:3},{value:"Dockerfile",id:"dockerfile",level:3},{value:"Explanation",id:"explanation",level:3}];function c(e){const t={admonition:"admonition",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"I couldn't lie that sveltekit is awesome framework for building web app. But,\nI believe there is no official documentation about how to deploy sveltekit app\nwith docker. So I will show you how to automate the deployment of a SvelteKit\napp with Docker."}),"\n",(0,i.jsx)(t.admonition,{title:"Important Note",type:"danger",children:(0,i.jsx)(t.p,{children:"Docker run as root by default. So you need to be careful when using Docker."})}),"\n",(0,i.jsx)(t.h3,{id:"why-we-use-docker-on-sveltekit",children:"Why we use Docker on SvelteKit?"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"With Docker, you can run your app anywhere where Docker is installed"}),"\n",(0,i.jsx)(t.li,{children:"Docker is the most popular containerization tool"}),"\n",(0,i.jsx)(t.li,{children:"It is easy to use and distribute"}),"\n",(0,i.jsx)(t.li,{children:"Make your app easy to scale"}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"dockerfile",children:"Dockerfile"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'FROM node:lts AS build\n\nWORKDIR /app\nCOPY package*.json .\nRUN npm install\nCOPY . .\nRUN npm run build\nRUN npm ci --omit=dev\n\nFROM node:lts-alpine\n# uncomment the line below if you need to make request to the outside world\n# RUN apk update && apk add ca-certificates && rm -rf /var/cache/apk/*\nWORKDIR /app\nCOPY --from=build /app/build ./build\nCOPY --from=build /app/package.json ./\nCOPY --from=build /app/node_modules ./node_modules\n\nEXPOSE 3000\nCMD ["node", "build"]\n'})}),"\n",(0,i.jsx)(t.h3,{id:"explanation",children:"Explanation"}),"\n",(0,i.jsxs)(t.p,{children:["So we use two stages in our Dockerfile. The first stage is the builder stage.\nWe use the node image as a base image. Then we copy the package.json and\npackage-lock.json file to the container. Then we install the dependencies.\nAfter that, we copy the source code to the container. Then we build the\nsveltekit app. Not to forget, we must run ",(0,i.jsx)(t.code,{children:"npm ci --omit=dev"})," to only install\nproduction dependencies. The second stage is the production stage. We use the\nnode image as a base image. Then we copy the build folder from the builder\nstage to the container. Then we copy the package.json and node_modules folder\nfrom the builder stage to the container. Then we expose the port 3000. Finally,\nwe run the sveltekit server. I use ",(0,i.jsx)(t.code,{children:"node build"})," because I use\nadapter-node. If you use adapter-static, there is no need to run ",(0,i.jsx)(t.code,{children:"node build"}),"\nand maybe even better to use nginx as a production base image."]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);